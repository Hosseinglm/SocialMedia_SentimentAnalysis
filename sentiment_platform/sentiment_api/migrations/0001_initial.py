# Generated by Django 5.2.6 on 2025-09-05 04:43

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('alert_type', models.CharField(choices=[('sentiment_threshold', 'Sentiment Threshold'), ('volume_spike', 'Volume Spike'), ('negative_trend', 'Negative Trend')], max_length=30)),
                ('threshold_value', models.FloatField()),
                ('time_window_hours', models.PositiveIntegerField(default=24)),
                ('is_active', models.BooleanField(default=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='open', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('data', models.JSONField(default=dict)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='sentiment_api.alertrule')),
            ],
            options={
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.AddField(
            model_name='alertrule',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='sentiment_api.brand'),
        ),
        migrations.CreateModel(
            name='SentimentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('brand_overview', 'Brand Overview'), ('trend_analysis', 'Trend Analysis'), ('comparative', 'Comparative Analysis'), ('crisis_detection', 'Crisis Detection')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateTimeField(blank=True, null=True)),
                ('results', models.JSONField(default=dict)),
                ('insights', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(default='system', max_length=100)),
                ('brands', models.ManyToManyField(blank=True, to='sentiment_api.brand')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SentimentTweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.CharField(max_length=50, unique=True)),
                ('sentiment_label', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Neutral', 'Neutral'), ('Irrelevant', 'Irrelevant')], max_length=20)),
                ('tweet_text', models.TextField()),
                ('clean_tweet', models.TextField(blank=True)),
                ('author', models.CharField(blank=True, max_length=100)),
                ('date', models.DateTimeField()),
                ('source', models.CharField(choices=[('train', 'Training'), ('validation', 'Validation')], max_length=20)),
                ('tweet_len', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('num_hashtags', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('num_mentions', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='sentiment_api.brand')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['brand', 'sentiment_label'], name='sentiment_a_brand_i_5bc8fa_idx'), models.Index(fields=['date'], name='sentiment_a_date_5f387a_idx'), models.Index(fields=['sentiment_label'], name='sentiment_a_sentime_2aae3c_idx'), models.Index(fields=['source'], name='sentiment_a_source_65e7c5_idx')],
            },
        ),
    ]
